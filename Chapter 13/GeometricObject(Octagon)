/* Dallin Savage
 * 8/26/20
 */

import java.util.Date;
import java.util.Scanner;
public abstract class GeometricObject {
	private String color;
	private boolean filled;
	private Date dateCreated = new Date();
	GeometricObject() {
	}
	GeometricObject(String newColor, boolean newFilled) {
		color = newColor;
		filled = newFilled;
	}
	public String getColor() {
		return color;
	}
	public void setColor(String newColor) {
		color = newColor;
	}
	public boolean isFilled() {
		return filled;
	}
	public void setFilled(boolean newFilled) {
		filled = newFilled;
	}
	public Date getDateCreated() {
		return dateCreated;
	}
	public abstract double getArea();
	public abstract double getPerimeter();
}
	interface Comparable {
		public abstract int compareTo(GeometricObject o);
	}
	interface Cloneable {
	}

	class Octagon extends GeometricObject implements Cloneable, Comparable {
			private double sideLength;
			Octagon() {
			}
			Octagon(double newSideLength) {
				sideLength = newSideLength;
			}
			Octagon(String newColor, boolean newFilled, double newSideLength) {
				super(newColor, newFilled);
				this.sideLength = newSideLength;
			}
			public double getSideLength() {
				return sideLength;
			}
			public double getPerimeter() {
				return sideLength * 8;
			}
			public double getArea() {
				double num = 2 + 4 / (Math.sqrt(2));
				double area = num * sideLength * sideLength;
				return area;
			}
			public int compareTo(GeometricObject o) {
				if (getArea() > o.getArea()) {
					return 1;
				}
				else if (getArea() < o.getArea()) {
					return -1;
				}
				else {
					return 0;
				}
			}
			public GeometricObject clone() {
			sideLength = getSideLength();
			return new Octagon(sideLength);
			}
		}

class TestOctagon {		
	public static void main(String[] args) {
		Octagon oct1 = new Octagon(5);
		Octagon oct2 = (Octagon)oct1.clone();
		System.out.println(oct1.compareTo(oct2));
		}
}
